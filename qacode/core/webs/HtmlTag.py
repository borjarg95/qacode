# -*- coding: utf-8 -*-
""""TODO: doc module"""


from enum import Enum


class HtmlTag(Enum):
    """Requirements: #35, #70"""

    TAG_DOCTYPE = '!DOCTYPE'
    TAG_COMMENT = '!--...--'

    TAG_html = 'html'
    TAG_head = 'head'
    TAG_title = 'title'
    TAG_body = 'body'
    TAG_h1 = 'h1'
    TAG_p = 'p'
    TAG_br = 'br'
    TAG_hr = 'hr'
    TAG_acronym = 'acronym'
    TAG_abbr = 'abbr'
    TAG_address = 'address'
    TAG_b = 'b'
    TAG_bdi = 'bdi'
    TAG_bdo = 'bdo'
    TAG_big = 'big'
    TAG_blockquote = 'blockquote'
    TAG_center = 'center'
    TAG_cite = 'cite'
    TAG_code = 'code'
    TAG_del = 'del'
    TAG_dfn = 'dfn'
    TAG_em = 'em'
    TAG_font = 'font'
    TAG_i = 'i'
    TAG_ins = 'ins'
    TAG_kbd = 'kbd'
    TAG_mark = 'mark'
    TAG_meter = 'meter'
    TAG_pre = 'pre'
    TAG_progress = 'progress'
    TAG_q = 'q'
    TAG_rp = 'rp'
    TAG_rt = 'rt'
    TAG_ruby = 'ruby'
    TAG_s = 's'
    TAG_samp = 'samp'
    TAG_small = 'small'
    TAG_strike = 'strike'
    TAG_strong = 'strong'
    TAG_sub = 'sub'
    TAG_sup = 'sup'
    TAG_time = 'time'
    TAG_tt = 'tt'
    TAG_u = 'u'
    TAG_var = 'var'
    TAG_wbr = 'wbr'
    TAG_form = 'form'
    TAG_input = 'input'
    TAG_textarea = 'textarea'
    TAG_button = 'button'
    TAG_select = 'select'
    TAG_optgroup = 'optgroup'
    TAG_option = 'option'
    TAG_label = 'label'
    TAG_fieldset = 'fieldset'
    TAG_legend = 'legend'
    TAG_datalist = 'datalist'
    TAG_output = 'output'
    TAG_frame = 'frame'
    TAG_frameset = 'frameset'
    TAG_noframes = 'noframes'
    TAG_iframe = 'iframe'
    TAG_img = 'img'
    TAG_map = 'map'
    TAG_area = 'area'
    TAG_canvas = 'canvas'
    TAG_figcaption = 'figcaption'
    TAG_figure = 'figure'
    TAG_picture = 'picture'
    TAG_audio = 'audio'
    TAG_source = 'source'
    TAG_track = 'track'
    TAG_video = 'video'
    TAG_a = 'a'
    TAG_link = 'link'
    TAG_nav = 'nav'
    TAG_ul = 'ul'
    TAG_ol = 'ol'
    TAG_li = 'li'
    TAG_dir = 'dir'
    TAG_dl = 'dl'
    TAG_dt = 'dt'
    TAG_dd = 'dd'
    TAG_menu = 'menu'
    TAG_menuitem = 'menuitem'
    TAG_table = 'table'
    TAG_caption = 'caption'
    TAG_th = 'th'
    TAG_tr = 'tr'
    TAG_td = 'td'
    TAG_thead = 'thead'
    TAG_tbody = 'tbody'
    TAG_tfoot = 'tfoot'
    TAG_col = 'col'
    TAG_colgroup = 'colgroup'
    TAG_style = 'style'
    TAG_div = 'div'
    TAG_span = 'span'
    TAG_header = 'header'
    TAG_footer = 'footer'
    TAG_main = 'main'
    TAG_section = 'section'
    TAG_article = 'article'
    TAG_aside = 'aside'
    TAG_details = 'details'
    TAG_dialog = 'dialog'
    TAG_summary = 'summary'
    TAG_data = 'data'
    TAG_head = 'head'
    TAG_meta = 'meta'
    TAG_base = 'base'
    TAG_basefont = 'basefont'
    TAG_script = 'script'
    TAG_noscript = 'noscript'
    TAG_applet = 'applet'
    TAG_embed = 'embed'
    TAG_object = 'object'
    TAG_param = 'param'

    @classmethod
    def get_tags(cls):
        """return enum values"""
        return [item.value for item in HtmlTag]

    @classmethod
    def has_tag(cls, value):
        """returns True if enum have value"""
        return any(value == item.value for item in cls)
